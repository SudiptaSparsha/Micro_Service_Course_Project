server.port=8082
spring.application.name=api-gateway
eureka.client.service-url.defaultZone=http://localhost:8010/eureka

#this will enable discovery locator feature,
#and by enabling this feature, gateway routing is enabled
#this is the easiest way to enable gateway routing
#this will make the spring cloud api gateway automatically map and route the
#http request to a destination microservice
spring.cloud.gateway.discovery.locator.enabled=true
#this will enable the gateway to locate service name in the lower case
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

#now we will configure routing manually instead of discovery locator
spring.cloud.gateway.routes[0].id=users-status-check
#here lb stands for load-balancer and then users-ws is the microservice name
spring.cloud.gateway.routes[0].uri=lb://users-ws
#predicates are like conditions, here if both the conditions are matched, then
#the http request will be sent to its destination microservice
#request URL path has to be "users/status/check" and the method has to be GET
spring.cloud.gateway.routes[0].predicates[0]=Path=/users/status/check
spring.cloud.gateway.routes[0].predicates[1]=Method=GET
#this filter will remove cookie from the request header
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[0].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[1].id=users-ws-login
spring.cloud.gateway.routes[1].uri=lb://users-ws
spring.cloud.gateway.routes[1].predicates[0]=Path=/users-ws/users/login
spring.cloud.gateway.routes[1].predicates[1]=Method=POST
spring.cloud.gateway.routes[1].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[1].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}